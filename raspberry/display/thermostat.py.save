
#import
import _ssl
import mysql.connector
import mariadb
import configparser
from papirus import PapirusTextPos
import RPi.GPIO as GPIO

# Import config
Config = configparser.ConfigParser()
Config.read('config.cfg')
Config.sections()
'Db' in Config
Host = Config['Db']['Host']
Port = int(Config['Db']['Port'])
User = Config['Db']['User']
Pwd = Config['Db']['Pwd']
Name = Config['Db']['Name']

# Init the GPIO
def init_gpio():
    GPIO.setwarnings(False)
    GPIO.setmode(GPIO.BCM)
    GPIO.setup(16, GPIO.IN)
    GPIO.setup(20, GPIO.IN)
    GPIO.setup(21, GPIO.IN)
    GPIO.setup(26, GPIO.IN)

# Get current temperature of the main sensor
def get_current_temperature():
    conn = mariadb.connect(host=Host, user=User, password=Pwd, database=Name, port=Port)
    cursor = conn.cursor()
    cursor.execute("SELECT `value` FROM `sensors` WHERE `type` = 'temperature' AND `location` = 'living-room' ORDER BY `recordTime` DESC LIMIT 0,1")
    for (temp) in cursor:
        temperature = temp[0]
    cursor.close()
    conn.close()
    return temperature


# Get current humidity of the main sensor
def get_current_humidity():
    conn = mariadb.connect(host=Host, user=User, password=Pwd, database=Name, port=Port)
    cursor = conn.cursor()
    cursor.execute("SELECT `value` FROM `sensors` WHERE `type` = 'humidity' AND `location` = 'living-room' ORDER BY `recordTime` DESC LIMIT 0,1")
    for (temp) in cursor:
        humidity = temp[0]
    cursor.close()
    conn.close()
    return humidity

# Init
init_gpio()

# Display on screen
text = PapirusTextPos(0)

CurrentTemp = str(get_current_temperature()) + "Â°C"
CurrentHumidity = str(get_current_humidity()) + "%"

text.AddText("Temperature", 10, 10, size=24)
text.AddText(CurrentTemp, 10, 30, size=48, Id="Temp")
text.AddText("Humidity", 10, 80, size=24)
text.AddText(CurrentHumidity, 10, 100, size=48, Id="Humid")

text.WriteAll()

